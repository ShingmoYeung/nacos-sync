# 内置容器配置
server.port=8083
# 默认是CPU核心数的8倍，这个值的配置取决于服务业务平均响应和代码复杂度等
server.undertow.threads.worker=256
# 是否分配的直接内存
server.undertow.direct-buffers=true
# 以下的配置会影响buffer,这些buffer会用于服务器连接的IO操作,有点类似netty的池化内存管理
# 每块buffer的空间大小,越小的空间被利用越充分
server.undertow.buffer-size=1024

# 应用名称
spring.application.name=nacos-sync-server

# 根据Maven打包，指定不同的环境配置
spring.profiles.active=${profiles-active:dev}

# 服务配置
server.ip-address=${spring.cloud.client.ip-address:127.0.0.1}

# Alibaba Nacos
# 高配版开发环境 http://180.76.189.174:18849
spring.cloud.nacos.server-addr=${nacos-service-addr:http://180.76.189.174:18849}
# 服务注册
spring.cloud.nacos.discovery.namespace=${nacos-service-namespace:nacos-sync-prod}
# 配置中心
spring.cloud.nacos.config.enabled=${nacos-enable:false}
spring.cloud.nacos.config.server-addr=${spring.cloud.nacos.server-addr}
spring.cloud.nacos.config.prefix=sync
spring.cloud.nacos.config.namespace=${nacos-service-namespace:nacos-sync-prod}

# 端口暴露
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always